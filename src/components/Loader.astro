---

---

<div class="loader">
  <svg id="progress-name" width="497" height="136" viewBox="0 0 497 136" fill="none" xmlns="http://www.w3.org/2000/svg">
    <defs>
      <clipPath id="fillClip">
        <rect id="fillClipRect" x="0" y="0" width="0" height="136" />
      </clipPath>

      <filter id="filter0_d_51_9" x="0.224701" y="0.800049" width="495.914" height="134.4" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
        <feFlood flood-opacity="0" result="BackgroundImageFix"/>
        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
        <feOffset dy="16"/>
        <feGaussianBlur stdDeviation="12"/>
        <feComposite in2="hardAlpha" operator="out"/>
        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0"/>
        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_51_9"/>
        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_51_9" result="shape"/>
      </filter>
    </defs>

    <!-- BACKGROUND TEXT -->
    <g filter="url(#filter0_d_51_9)">
      <path d="M24.2247 9.99999H40.7847L53.6247 60.28H53.8647V9.99999H65.6247V94H52.0647L36.2247 32.68H35.9847V94H24.2247V9.99999ZM85.6356 9.99999H103.516L117.196 94H103.996L101.596 77.32V77.56H86.5956L84.1956 94H71.9556L85.6356 9.99999ZM100.036 66.16L94.1556 24.64H93.9156L88.1556 66.16H100.036ZM128.412 22H114.612V9.99999H155.412V22H141.612V94H128.412V22ZM161.803 9.99999H197.803V22H175.003V44.2H193.123V56.2H175.003V82H197.803V94H161.803V9.99999ZM241.775 95.2C235.375 95.2 230.535 93.4 227.255 89.8C223.975 86.12 222.335 80.88 222.335 74.08V69.28H234.815V75.04C234.815 80.48 237.095 83.2 241.655 83.2C243.895 83.2 245.575 82.56 246.695 81.28C247.895 79.92 248.495 77.76 248.495 74.8C248.495 71.28 247.695 68.2 246.095 65.56C244.495 62.84 241.535 59.6 237.215 55.84C231.775 51.04 227.975 46.72 225.815 42.88C223.655 38.96 222.575 34.56 222.575 29.68C222.575 23.04 224.255 17.92 227.615 14.32C230.975 10.64 235.855 8.8 242.255 8.8C248.575 8.8 253.335 10.64 256.535 14.32C259.815 17.92 261.455 23.12 261.455 29.92V33.4H248.975V29.08C248.975 26.2 248.415 24.12 247.295 22.84C246.175 21.48 244.535 20.8 242.375 20.8C237.975 20.8 235.775 23.48 235.775 28.84C235.775 31.88 236.575 34.72 238.175 37.36C239.855 40 242.855 43.2 247.175 46.96C252.695 51.76 256.495 56.12 258.575 60.04C260.655 63.96 261.695 68.56 261.695 73.84C261.695 80.72 259.975 86 256.535 89.68C253.175 93.36 248.255 95.2 241.775 95.2ZM279.584 22H265.784V9.99999H306.584V22H292.784V94H279.584V22ZM331.586 95.2C325.106 95.2 320.146 93.36 316.706 89.68C313.266 86 311.546 80.8 311.546 74.08V29.92C311.546 23.2 313.266 18 316.706 14.32C320.146 10.64 325.106 8.8 331.586 8.8C338.066 8.8 343.026 10.64 346.466 14.32C349.906 18 351.626 23.2 351.626 29.92V74.08C351.626 80.8 349.906 86 346.466 89.68C343.026 93.36 338.066 95.2 331.586 95.2ZM331.586 83.2C336.146 83.2 338.426 80.44 338.426 74.92V29.08C338.426 23.56 336.146 20.8 331.586 20.8C327.026 20.8 324.746 23.56 324.746 29.08V74.92C324.746 80.44 327.026 83.2 331.586 83.2ZM360.553 9.99999H373.753V82H395.473V94H360.553V9.99999ZM402.748 22H388.948V9.99999H429.748V22H415.948V94H402.748V22ZM433.499 82.24L457.979 22H434.699V9.99999H472.139V21.76L447.659 82H472.139V94H433.499V82.24Z" fill="#333333"/>
    </g>

    <!-- WHITE FILL OVERLAY -->
    <g clip-path="url(#fillClip)">
      <path d="M24.2247 9.99999H40.7847L53.6247 60.28H53.8647V9.99999H65.6247V94H52.0647L36.2247 32.68H35.9847V94H24.2247V9.99999ZM85.6356 9.99999H103.516L117.196 94H103.996L101.596 77.32V77.56H86.5956L84.1956 94H71.9556L85.6356 9.99999ZM100.036 66.16L94.1556 24.64H93.9156L88.1556 66.16H100.036ZM128.412 22H114.612V9.99999H155.412V22H141.612V94H128.412V22ZM161.803 9.99999H197.803V22H175.003V44.2H193.123V56.2H175.003V82H197.803V94H161.803V9.99999ZM241.775 95.2C235.375 95.2 230.535 93.4 227.255 89.8C223.975 86.12 222.335 80.88 222.335 74.08V69.28H234.815V75.04C234.815 80.48 237.095 83.2 241.655 83.2C243.895 83.2 245.575 82.56 246.695 81.28C247.895 79.92 248.495 77.76 248.495 74.8C248.495 71.28 247.695 68.2 246.095 65.56C244.495 62.84 241.535 59.6 237.215 55.84C231.775 51.04 227.975 46.72 225.815 42.88C223.655 38.96 222.575 34.56 222.575 29.68C222.575 23.04 224.255 17.92 227.615 14.32C230.975 10.64 235.855 8.8 242.255 8.8C248.575 8.8 253.335 10.64 256.535 14.32C259.815 17.92 261.455 23.12 261.455 29.92V33.4H248.975V29.08C248.975 26.2 248.415 24.12 247.295 22.84C246.175 21.48 244.535 20.8 242.375 20.8C237.975 20.8 235.775 23.48 235.775 28.84C235.775 31.88 236.575 34.72 238.175 37.36C239.855 40 242.855 43.2 247.175 46.96C252.695 51.76 256.495 56.12 258.575 60.04C260.655 63.96 261.695 68.56 261.695 73.84C261.695 80.72 259.975 86 256.535 89.68C253.175 93.36 248.255 95.2 241.775 95.2ZM279.584 22H265.784V9.99999H306.584V22H292.784V94H279.584V22ZM331.586 95.2C325.106 95.2 320.146 93.36 316.706 89.68C313.266 86 311.546 80.8 311.546 74.08V29.92C311.546 23.2 313.266 18 316.706 14.32C320.146 10.64 325.106 8.8 331.586 8.8C338.066 8.8 343.026 10.64 346.466 14.32C349.906 18 351.626 23.2 351.626 29.92V74.08C351.626 80.8 349.906 86 346.466 89.68C343.026 93.36 338.066 95.2 331.586 95.2ZM331.586 83.2C336.146 83.2 338.426 80.44 338.426 74.92V29.08C338.426 23.56 336.146 20.8 331.586 20.8C327.026 20.8 324.746 23.56 324.746 29.08V74.92C324.746 80.44 327.026 83.2 331.586 83.2ZM360.553 9.99999H373.753V82H395.473V94H360.553V9.99999ZM402.748 22H388.948V9.99999H429.748V22H415.948V94H402.748V22ZM433.499 82.24L457.979 22H434.699V9.99999H472.139V21.76L447.659 82H472.139V94H433.499V82.24Z" fill="white"/>
    </g>
  </svg>

  <div id="progress-text">0%</div>
</div>

  <!-- CSS -->
  <style>
    body {
      margin: 0;
      font-family: sans-serif;
      background: #111;
    }

    .loader {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
      background: linear-gradient(0deg, #1a1a1a 0%, #333 100%);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      transition: all 0.8s ease;
      z-index: 9999;
      transform: scale(1);
    transform-origin: center center;
    transition: opacity 0.6s ease;
    }

    #progress-name {
        width: 100%;
        max-width: 500px;
        transform: scale(1);
        transform-origin: center center;
        transition: transform 1.5s cubic-bezier( 0.89, 0, 0.4, 0.05 );
    }

    #progress-name.scale-up {
        transform: scale(1250); 
    }

    #progress-text {
      margin-top: 20px;
      font-size: 2rem;
      font-weight: bold;
      color: white;
    }

    .page-content {
      opacity: 0;
      transition: opacity 1s ease;
      color: white;
      padding: 2rem;
    }

    body.loaded .loader {
      opacity: 0;
      pointer-events: none;
    }

    body.loaded .page-content {
      opacity: 1;
    }



.loader--visible {
  opacity: 1;
}

.loader--fade-out {
  opacity: 0;
  pointer-events: none;
}
  </style>

  <!-- SCRIPT -->
  <script>
  document.addEventListener("DOMContentLoaded", () => {
    const progressText = document.getElementById('progress-text');
    const clipRect = document.getElementById('fillClipRect');
    const svg = document.querySelector('#progress-name');
    const loader = document.querySelector('.loader') as HTMLElement;

    let svgWidth = 497;
    let displayedPercent = 0;
    let targetPercent = 0;

if (loader) {
  requestAnimationFrame(() => {
    loader.classList.add('loader--visible');
  });
}

    const animateClip = () => {
      const targetWidth = (displayedPercent / 100) * svgWidth;
      if (clipRect) {
        clipRect.setAttribute('width', String(targetWidth));
      }
    };

    const smoothUpdate = () => {
      if (displayedPercent < targetPercent) {
        displayedPercent += 1;
        if (progressText) {
          progressText.textContent = `${displayedPercent}%`;
        }
        animateClip();
        requestAnimationFrame(smoothUpdate);
      } else if (displayedPercent === 100) {
        setTimeout(() => {
          svg?.classList.add('scale-up');

          setTimeout(() => {
            loader?.classList.add('loader--fade-out');
            document.body.classList.add('loaded');
          }, 1500); // after scale
        }, 250); // short pause after 100%
      }
    };

    const updateProgressText = (percent: number) => {
      targetPercent = percent;
      if (displayedPercent < targetPercent) {
        smoothUpdate();
      }
    };

    const resources = Array.from(document.images);
    const totalResources = resources.length;
    let loadedResources = 0;

    const updateResourceLoad = () => {
      loadedResources++;
      const percentLoaded = Math.round((loadedResources / totalResources) * 100);
      updateProgressText(percentLoaded);
    };

    resources.forEach((img) => {
      if (img.complete) {
        updateResourceLoad();
      } else {
        img.addEventListener('load', updateResourceLoad);
        img.addEventListener('error', updateResourceLoad);
      }
    });

    window.addEventListener('load', () => {
      updateProgressText(100);
    });
  });
</script>

